<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="95163af6-d8a6-4e26-ad7c-1c4746152c17" created="3.8.1" activeEnvironment="Default environment" name="Project 1" compositeProjectFormat="1.3" updated="3.8.1" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer>
    <con:oAuth2Profile>
      <con:name>petstore_auth IMPLICIT</con:name>
      <con:type>OAuth 2.0</con:type>
      <con:authorizationURI>http://petstore.swagger.io/oauth/dialog</con:authorizationURI>
      <con:accessTokenPosition>HEADER</con:accessTokenPosition>
      <con:oAuth2Flow>IMPLICIT_GRANT</con:oAuth2Flow>
      <con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod>
      <con:scope>write:pets read:pets</con:scope>
    </con:oAuth2Profile>
  </con:oAuth2ProfileContainer>
  <con:oAuth1ProfileContainer/>
  <con:reporting/>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:environment id="b8f8a0ab-2a84-4d9b-847d-e9cac325e8e6" name="QA" index="0">
    <con:service type="REST" name="Swagger Petstore">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">virtserver.swaggerhub</con:endpoint>
    </con:service>
    <con:databaseConnectionContainer/>
    <con:jmsConnectionContainer/>
  </con:environment>
  <con:environment id="c436dfdd-5f12-4b1b-9481-728f2f15399a" name="Local" index="1">
    <con:service type="REST" name="Swagger Petstore">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">http://localhost:8088/</con:endpoint>
    </con:service>
    <con:databaseConnectionContainer/>
    <con:jmsConnectionContainer/>
  </con:environment>
  <con:authRepository>
    <con:oAuth20AuthEntry>
      <con:name>petstore_auth IMPLICIT</con:name>
      <con:type>OAuth 2.0</con:type>
      <con:authorizationURI>http://petstore.swagger.io/oauth/dialog</con:authorizationURI>
      <con:accessTokenPosition>HEADER</con:accessTokenPosition>
      <con:oAuth2Flow>IMPLICIT_GRANT</con:oAuth2Flow>
      <con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod>
      <con:scope>write:pets read:pets</con:scope>
    </con:oAuth20AuthEntry>
  </con:authRepository>
  <con:environmentSpec>
    <con:entry environmentId="b8f8a0ab-2a84-4d9b-847d-e9cac325e8e6">
      <con:authProfile>No Authorization</con:authProfile>
    </con:entry>
    <con:entry environmentId="c436dfdd-5f12-4b1b-9481-728f2f15399a">
      <con:authProfile>No Authorization</con:authProfile>
    </con:entry>
  </con:environmentSpec>
  <con:tags/>
</con:soapui-project>
